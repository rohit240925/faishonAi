{"version":3,"file":"services-C3owMyCw.js","sources":["../../src/services/subscriptionService.js","../../src/services/fashionService.js"],"sourcesContent":["import { supabase } from '../lib/supabase';\n\n/**\n * Subscription management service\n */\nexport const subscriptionService = {\n  /**\n   * Get all available subscription plans\n   */\n  async getPlans() {\n    try {\n      const { data, error } = await supabase?.from('subscription_plans')?.select('*')?.eq('is_active', true)?.order('price_monthly', { ascending: true });\n\n      if (error) throw error;\n\n      return data || [];\n    } catch (error) {\n      console.error('Get plans error:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get user's current subscription\n   */\n  async getUserSubscription(userId) {\n    try {\n      const { data, error } = await supabase?.from('user_subscriptions')?.select(`*,subscription_plans (*)`)?.eq('user_id', userId)?.eq('status', 'active')?.single();\n\n      if (error && error?.code !== 'PGRST116') {\n        throw error;\n      }\n\n      return data || null;\n    } catch (error) {\n      console.error('Get user subscription error:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Create Stripe checkout session for subscription\n   */\n  async createCheckoutSession(planId, interval = 'monthly') {\n    try {\n      const { data, error } = await supabase?.functions?.invoke('create-checkout-session', {\n        body: {\n          planId,\n          interval,\n          successUrl: `${window.location?.origin}/subscription/success`,\n          cancelUrl: `${window.location?.origin}/subscription`\n        }\n      });\n\n      if (error) throw error;\n\n      return data;\n    } catch (error) {\n      console.error('Create checkout session error:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Create Stripe customer portal session\n   */\n  async createPortalSession() {\n    try {\n      const { data, error } = await supabase?.functions?.invoke('create-customer-portal', {\n        body: {\n          returnUrl: `${window.location?.origin}/account`\n        }\n      });\n\n      if (error) throw error;\n\n      return data;\n    } catch (error) {\n      console.error('Create portal session error:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Purchase additional API credits\n   */\n  async purchaseCredits(credits) {\n    try {\n      // Calculate cost with discount\n      const { data: costData, error: costError } = await supabase?.rpc('calculate_recharge_cost', { credits });\n\n      if (costError) throw costError;\n\n      const { base_cost, discount_percent, final_cost } = costData?.[0];\n\n      // Create payment intent for credit purchase\n      const { data, error } = await supabase?.functions?.invoke('create-checkout-session', {\n        body: {\n          type: 'credit_recharge',\n          credits,\n          baseCost: base_cost,\n          discountPercent: discount_percent,\n          finalCost: final_cost,\n          successUrl: `${window.location?.origin}/credits/success`,\n          cancelUrl: `${window.location?.origin}/credits`\n        }\n      });\n\n      if (error) throw error;\n\n      return data;\n    } catch (error) {\n      console.error('Purchase credits error:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get user's API usage history\n   */\n  async getApiUsage(userId, limit = 50) {\n    try {\n      const { data, error } = await supabase?.from('api_usage')?.select(`\n          *,\n          user_subscriptions:subscription_id(\n            plan_id,\n            subscription_plans:plan_id(name)\n          )\n        `)?.eq('user_id', userId)?.order('created_at', { ascending: false })?.limit(limit);\n\n      if (error) throw error;\n      return data || [];\n    } catch (error) {\n      console.error('Error fetching API usage:', error);\n      throw new Error('Failed to fetch API usage');\n    }\n  },\n\n  /**\n   * Get user's billing history\n   */\n  async getBillingHistory(userId, page = 1, limit = 20) {\n    try {\n      const offset = (page - 1) * limit;\n\n      const { data, error, count } = await supabase?.from('billing_history')?.select('*', { count: 'exact' })?.eq('user_id', userId)?.order('created_at', { ascending: false })?.range(offset, offset + limit - 1);\n\n      if (error) throw error;\n\n      return {\n        history: data || [],\n        total: count || 0,\n        page,\n        totalPages: Math.ceil((count || 0) / limit)\n      };\n    } catch (error) {\n      console.error('Get billing history error:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get user's fashion analysis results\n   */\n  async getFashionAnalysisResults(userId, limit = 20) {\n    try {\n      const { data, error } = await supabase?.from('fashion_analysis_results')?.select('*')?.eq('user_id', userId)?.order('created_at', { ascending: false })?.limit(limit);\n\n      if (error) throw error;\n      return data || [];\n    } catch (error) {\n      console.error('Error fetching fashion analysis results:', error);\n      throw new Error('Failed to fetch analysis results');\n    }\n  },\n\n  /**\n   * Process AI fashion generation with credit consumption\n   */\n  async processAIGeneration({\n    prompt,\n    generationStyle = 'realistic',\n    creativity = 0.7,\n    maxImages = 1\n  }) {\n    try {\n      const { data: session, error } = await supabase?.auth?.getSession();\n      if (error || !session?.session?.access_token) {\n        throw new Error('Authentication required');\n      }\n\n      const response = await fetch(`${import.meta.env?.VITE_SUPABASE_URL}/functions/v1/process-ai-generation`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${session?.session?.access_token}`,\n        },\n        body: JSON.stringify({\n          prompt,\n          generationStyle,\n          creativity,\n          maxImages\n        }),\n      });\n\n      const data = await response?.json();\n      if (!response?.ok) {\n        throw new Error(data.error || 'Failed to process AI generation');\n      }\n\n      return data;\n    } catch (error) {\n      console.error('Error processing AI generation:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get subscription status color for UI\n   */\n  getStatusColor(status) {\n    const colors = {\n      active: 'text-green-600 bg-green-100',\n      inactive: 'text-gray-600 bg-gray-100',\n      canceled: 'text-red-600 bg-red-100',\n      past_due: 'text-yellow-600 bg-yellow-100',\n      paused: 'text-blue-600 bg-blue-100'\n    };\n    return colors?.[status] || colors?.inactive;\n  },\n\n  /**\n   * Check if user needs storage upgrade warning\n   */\n  async checkStorageUpgradeNeeded(userId) {\n    try {\n      const { data, error } = await supabase?.from('user_profiles')?.select('storage_used_bytes, storage_limit_bytes')?.eq('id', userId)?.single();\n\n      if (error) throw error;\n\n      const usagePercent = (data?.storage_used_bytes / data?.storage_limit_bytes) * 100;\n      \n      return {\n        needsWarning: usagePercent >= 90,\n        usagePercent: Math.round(usagePercent),\n        used: Math.round(data?.storage_used_bytes / (1024 * 1024)), // MB\n        limit: Math.round(data?.storage_limit_bytes / (1024 * 1024)) // MB\n      };\n    } catch (error) {\n      console.error('Check storage upgrade error:', error);\n      return { needsWarning: false, usagePercent: 0 };\n    }\n  },\n\n  /**\n   * Send notification email\n   */\n  async sendNotificationEmail(email, template, data = {}) {\n    try {\n      const { data: result, error } = await supabase?.functions?.invoke('send-notification-email', {\n        body: {\n          email,\n          subject: this.getEmailSubject(template),\n          template,\n          data\n        }\n      });\n\n      if (error) throw error;\n\n      return result;\n    } catch (error) {\n      console.error('Send notification email error:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get email subject for template\n   */\n  getEmailSubject(template) {\n    const subjects = {\n      welcome: 'Welcome to FashionGen! ðŸŽ¨',\n      subscription_changed: 'Your FashionGen subscription has been updated',\n      credit_recharge: 'API credits successfully added to your account',\n      storage_warning: 'Storage limit warning - FashionGen'\n    };\n\n    return subjects?.[template] || 'FashionGen Notification';\n  },\n\n  /**\n   * Calculate price with discount\n   */\n  calculatePrice(planPrice, interval = 'monthly') {\n    if (interval === 'yearly') {\n      // 2 months free when paying yearly\n      return planPrice * 10; // 10 months instead of 12\n    }\n    return planPrice;\n  },\n\n  /**\n   * Format price for display\n   */\n  formatPrice(price, currency = 'USD') {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency,\n    })?.format(price);\n  },\n\n  /**\n   * Format date\n   */\n  formatDate(dateString) {\n    if (!dateString) return 'N/A';\n    return new Date(dateString)?.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    });\n  }\n};\n\nexport default subscriptionService;","import { supabase } from '../lib/supabase';\n\nexport const fashionService = {\n  // Generate fashion analysis using AI\n  async generateFashionAnalysis(imageData, options = {}) {\n    try {\n      const {\n        styles = [],\n        creativityLevel = 0.7,\n        maxImages = 1,\n        inspirationImage = null,\n        conversationalPrompt = ''\n      } = options;\n\n      // Check user credits first\n      const { data: userProfile } = await supabase?.from('user_profiles')?.select('current_api_credits')?.eq('id', (await supabase?.auth?.getUser())?.data?.user?.id)?.single();\n\n      if (!userProfile || userProfile?.current_api_credits < 1) {\n        throw new Error('Insufficient API credits');\n      }\n\n      // Call the AI generation edge function\n      const { data, error } = await supabase?.functions?.invoke('process-ai-generation', {\n        body: {\n          imageData,\n          styles,\n          creativityLevel,\n          maxImages,\n          inspirationImage,\n          conversationalPrompt,\n          operationType: 'fashion_analysis'\n        }\n      });\n\n      if (error) throw error;\n\n      return data;\n    } catch (error) {\n      console.error('Fashion analysis error:', error);\n      throw error;\n    }\n  },\n\n  // Get user's fashion portfolio\n  async getUserPortfolio(userId, page = 1, limit = 20) {\n    try {\n      const offset = (page - 1) * limit;\n\n      const { data, error, count } = await supabase?.from('fashion_portfolio_images')?.select('*', { count: 'exact' })?.eq('user_id', userId)?.eq('is_expired', false)?.order('created_at', { ascending: false })?.range(offset, offset + limit - 1);\n\n      if (error) throw error;\n\n      return {\n        images: data || [],\n        total: count || 0,\n        page,\n        totalPages: Math.ceil((count || 0) / limit)\n      };\n    } catch (error) {\n      console.error('Get portfolio error:', error);\n      throw error;\n    }\n  },\n\n  // Save generated image to portfolio\n  async saveToPortfolio(imageData, metadata = {}) {\n    try {\n      const user = await supabase?.auth?.getUser();\n      if (!user?.data?.user) throw new Error('User not authenticated');\n\n      const { data, error } = await supabase?.from('fashion_portfolio_images')?.insert({\n          user_id: user?.data?.user?.id,\n          image_data: imageData,\n          image_metadata: metadata,\n          style: metadata?.style || 'realistic',\n          original_prompt: metadata?.originalPrompt || '',\n          expires_at: new Date(Date.now() + 72 * 60 * 60 * 1000)?.toISOString() // 72 hours\n        })?.select()?.single();\n\n      if (error) throw error;\n\n      return data;\n    } catch (error) {\n      console.error('Save to portfolio error:', error);\n      throw error;\n    }\n  },\n\n  // Delete image from portfolio\n  async deleteFromPortfolio(imageId) {\n    try {\n      const { error } = await supabase?.from('fashion_portfolio_images')?.delete()?.eq('id', imageId);\n\n      if (error) throw error;\n\n      return true;\n    } catch (error) {\n      console.error('Delete from portfolio error:', error);\n      throw error;\n    }\n  },\n\n  // Upload inspiration image to storage\n  async uploadInspirationImage(file, userId) {\n    try {\n      const fileExt = file?.name?.split('.')?.pop();\n      const fileName = `${userId}/inspiration/${Date.now()}.${fileExt}`;\n\n      // Check storage limit\n      const canUpload = await supabase?.rpc('check_storage_limit', {\n        user_uuid: userId,\n        file_size: file?.size\n      });\n\n      if (!canUpload?.data) {\n        throw new Error('Storage limit exceeded. Please upgrade your plan or free up space.');\n      }\n\n      const { data, error } = await supabase?.storage?.from('fashion-images')?.upload(fileName, file, {\n          cacheControl: '3600',\n          upsert: false\n        });\n\n      if (error) throw error;\n\n      // Update user storage usage\n      await supabase?.rpc('update_user_storage_usage', {\n        user_uuid: userId\n      });\n\n      // Get public URL\n      const { data: { publicUrl } } = supabase?.storage?.from('fashion-images')?.getPublicUrl(fileName);\n\n      return {\n        path: data?.path,\n        url: publicUrl\n      };\n    } catch (error) {\n      console.error('Upload inspiration image error:', error);\n      throw error;\n    }\n  },\n\n  // Get user storage stats\n  async getUserStorageStats(userId) {\n    try {\n      const { data, error } = await supabase?.from('user_profiles')?.select('storage_used_bytes, storage_limit_bytes')?.eq('id', userId)?.single();\n\n      if (error) throw error;\n\n      const usedMB = Math.round(data?.storage_used_bytes / (1024 * 1024));\n      const limitMB = Math.round(data?.storage_limit_bytes / (1024 * 1024));\n      const usagePercent = Math.round((data?.storage_used_bytes / data?.storage_limit_bytes) * 100);\n\n      return {\n        used: usedMB,\n        limit: limitMB,\n        usagePercent,\n        isNearLimit: usagePercent >= 90\n      };\n    } catch (error) {\n      console.error('Get storage stats error:', error);\n      throw error;\n    }\n  },\n\n  // Get available styles\n  getAvailableStyles() {\n    return [\n      { id: 'realistic', name: 'Realistic', description: 'Photorealistic fashion rendering' },\n      { id: 'artistic', name: 'Artistic', description: 'Creative and stylized interpretation' },\n      { id: 'vintage', name: 'Vintage', description: 'Classic retro fashion styles' },\n      { id: 'modern', name: 'Modern', description: 'Contemporary fashion trends' },\n      { id: 'casual', name: 'Casual', description: 'Everyday comfortable wear' },\n      { id: 'formal', name: 'Formal', description: 'Professional and elegant attire' },\n      { id: 'streetwear', name: 'Streetwear', description: 'Urban and edgy fashion' },\n      { id: 'bohemian', name: 'Bohemian', description: 'Free-spirited and artistic style' },\n      { id: 'minimalist', name: 'Minimalist', description: 'Clean and simple designs' },\n      { id: 'glamour', name: 'Glamour', description: 'Luxurious and sophisticated looks' }\n    ];\n  },\n\n  // Format storage size\n  formatStorageSize(bytes) {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    if (bytes === 0) return '0 Bytes';\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\n    return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes?.[i];\n  }\n};"],"names":["subscriptionService","data","error","_d","_c","_b","_a","supabase","userId","_e","planId","interval","credits","costData","costError","base_cost","discount_percent","final_cost","limit","page","offset","count","prompt","generationStyle","creativity","maxImages","session","response","status","colors","usagePercent","email","template","result","subjects","planPrice","price","currency","dateString","fashionService","imageData","options","styles","creativityLevel","inspirationImage","conversationalPrompt","userProfile","_i","_h","_g","_f","_k","_j","metadata","user","imageId","file","fileExt","fileName","canUpload","publicUrl","usedMB","limitMB","bytes","sizes","i"],"mappings":"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"}